services:
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - api
    networks:
      - frontend_network
      - api_network
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
#    command: bash -c "python manage.py migrate && python manage.py load_data && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./envs/backend.env
      - ./envs/postgres.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: on-failure
    volumes:
      - ./api:/app
    networks:
      - api_network
      - postgres_network

  postgres:
    image: postgres:15.6-alpine
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    env_file:
      - ./envs/postgres.env
    ports:
      - "5432:5432"
    networks:
      - postgres_network

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./frontend:/app
    networks:
      - frontend_network
      - api_network
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  postgres_volume:

networks:
  frontend_network:
    driver: bridge
  postgres_network:
    driver: bridge
  api_network:
    driver: bridge
